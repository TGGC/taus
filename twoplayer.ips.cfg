MEMORY {
    RAM: start = $0760, size = $00A0, file = ""; # GAMEBSS init is limited to 255 bytes
    IPSHDR: start = $0000, size = $0005;
    SET_NUMBER_OF_PLAYERSHDR:start = $0000, size = $0005;
    SET_NUMBER_OF_PLAYERS:   start = $8130, size = $0002;
    SKIP_LEGALHDR:start = $0000, size = $0005;
    SKIP_LEGAL:   start = $8236, size = $0002;
    JMP_INIT_GAME_BACKGROUNDHDR:start = $0000, size = $0005;
    JMP_INIT_GAME_BACKGROUND:   start = $8605, size = $0005;
    JMP_INIT_GAME_STATEHDR:start = $0000, size = $0005;
    JMP_INIT_GAME_STATE:   start = $86E2, size = $0003;
    CODEHDR:start = $0000, size = $0005;
    CODE:   start = $D6C9, size = $0637;
    IPSEOF: start = $0000, size = $0003;
}

SEGMENTS {
    BSS: load = RAM, type = bss;
    GAMEBSS: load = RAM, type = bss, define = yes;
    IPSHEADER:load = IPSHDR;
    IPSEOF:   load = IPSEOF;
    CODEHDR: load = CODEHDR;
    CODE:    load = CODE, define = yes;
    JMP_INIT_GAME_BACKGROUNDHDR: load = JMP_INIT_GAME_BACKGROUNDHDR;
    JMP_INIT_GAME_BACKGROUND:    load = JMP_INIT_GAME_BACKGROUND, define = yes;
    JMP_INIT_GAME_STATEHDR: load = JMP_INIT_GAME_STATEHDR;
    JMP_INIT_GAME_STATE:    load = JMP_INIT_GAME_STATE, define = yes;
    SET_NUMBER_OF_PLAYERSHDR: load = SET_NUMBER_OF_PLAYERSHDR;
    SET_NUMBER_OF_PLAYERS:    load = SET_NUMBER_OF_PLAYERS, define = yes;
    SKIP_LEGALHDR: load = SKIP_LEGALHDR;
    SKIP_LEGAL:    load = SKIP_LEGAL, define = yes;
}
