--- orig
+++ mod
@@ -381,11 +381,12 @@ @continueWarmBootInit:
         lda     #$0E
         sta     $34
         lda     #$00
         sta     gameModeState
         sta     gameMode
-        lda     #$01
+        ; TODO: Make this configurable in-game
+        lda     #$02
         sta     numberOfPlayers
         lda     #$00
         sta     frameCounter+1
 @mainLoop:
         jsr     branchOnGameMode
@@ -516,11 +517,12 @@ gameMode_legalScreen:
         jsr     updateAudioWaitForNmiAndResetOamStaging
         lda     #$00
         ldx     #$02
         ldy     #$02
         jsr     memset_page
-        lda     #$FF
+        ; TODO: split into separate mod file
+        lda     #$00
         jsr     sleep_for_a_vblanks
         lda     #$FF
         sta     generalCounter
 @waitForStartButton:
         lda     newlyPressedButtons
@@ -1023,12 +1025,16 @@ gameModeState_initGameBackground:
         jsr     changeCHRBank0
         lda     #$03
         jsr     changeCHRBank1
         jsr     bulkCopyToPpu
         .addr   game_palette
-        jsr     bulkCopyToPpu
-        .addr   game_nametable
+        .import initGameBackground_mod
+        jsr     initGameBackground_mod
+        nop
+        nop
+        ;jsr     bulkCopyToPpu
+        ;.addr   game_nametable
         lda     #$20
         sta     PPUADDR
         lda     #$83
         sta     PPUADDR
         lda     gameType
@@ -1110,11 +1116,13 @@ game_typeb_nametable_patch:
         .byte   $3E,$3E,$3F,$FD
 gameModeState_initGameState:
         lda     #$EF
         ldx     #$04
         ldy     #$04
-        jsr     memset_page
+        .import initGameState_mod
+        jsr     initGameState_mod
+        ;jsr     memset_page
         ldx     #$0F
         lda     #$00
 ; statsByType
 @initStatsByType:
         sta     $03EF,x
@@ -1548,17 +1556,17 @@ stageSpriteForCurrentPiece:
         lda     numberOfPlayers
         cmp     #$01
         beq     L8A2C
         lda     generalCounter3
         sec
-        sbc     #$40
+        sbc     #$50
         sta     generalCounter3
         lda     activePlayer
         cmp     #$01
         beq     L8A2C
         lda     generalCounter3
-        adc     #$6F
+        adc     #$8F
         sta     generalCounter3
 L8A2C:  clc
         lda     tetriminoY
         rol     a
         rol     a
@@ -2420,21 +2428,21 @@ @renderLines:
         and     #$FE
         sta     outOfDateRenderFlags
         jmp     @renderLevel
 
 @renderLinesTwoPlayers:
-        lda     #$20
+        lda     #$21
         sta     PPUADDR
-        lda     #$68
+        lda     #$CF
         sta     PPUADDR
         lda     player1_lines+1
         sta     PPUDATA
         lda     player1_lines
         jsr     twoDigsToPPU
-        lda     #$20
+        lda     #$23
         sta     PPUADDR
-        lda     #$7A
+        lda     #$30
         sta     PPUADDR
         lda     player2_lines+1
         sta     PPUDATA
         lda     player2_lines
         jsr     twoDigsToPPU
@@ -2460,12 +2468,15 @@ @renderLevel:
         jsr     updatePaletteForLevel
         lda     outOfDateRenderFlags
         and     #$FD
         sta     outOfDateRenderFlags
 @renderScore:
-        lda     numberOfPlayers
-        cmp     #$02
+        .import renderPlay_mod
+        jsr     renderPlay_mod
+        nop
+        ;lda     numberOfPlayers
+        ;cmp     #$02
         beq     @renderStats
         lda     outOfDateRenderFlags
         and     #$04
         beq     @renderStats
         lda     #$21
@@ -2588,18 +2599,18 @@ copyPlayfieldRowToVRAM:
         lda     playfieldAddr+1
         cmp     #$05
         beq     @playerTwo
         lda     vramPlayfieldRows,x
         sec
-        sbc     #$02
+        sbc     #$04
         sta     PPUADDR
         jmp     @copyRow
 
 @playerTwo:
         lda     vramPlayfieldRows,x
         clc
-        adc     #$0C
+        adc     #$0E
         sta     PPUADDR
         jmp     @copyRow
 
 @onePlayer:
         lda     vramPlayfieldRows,x
@@ -2649,18 +2660,18 @@ @twoPlayers:
         lda     playfieldAddr+1
         cmp     #$04
         bne     @player2
         lda     generalCounter
         sec
-        sbc     #$02
+        sbc     #$04
         sta     generalCounter
         jmp     @updateVRAM
 
 @player2:
         lda     generalCounter
         clc
-        adc     #$0C
+        adc     #$0E
         sta     generalCounter
 @updateVRAM:
         iny
         lda     vramPlayfieldRows,y
         sta     generalCounter2
@@ -3818,11 +3829,11 @@ L9FE9:  ldy     #$00
         sty     PPUSCROLL
         sty     PPUSCROLL
         rts
 
 showHighScores:
-        lda     numberOfPlayers
+        lda     #$01
         cmp     #$01
         beq     L9FFB
         jmp     LA085
 
 L9FFB:  jsr     bulkCopyToPpu
