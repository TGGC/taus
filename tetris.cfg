MEMORY {
    ZP:     start = $00,    size = $0100, type = rw, file = "";
    OAM:    start = $0200,  size = $0100, type = rw, file = "";
    RAM:    start = $0300,  size = $0500, type = rw, file = "";
    HDR:    start = $0000,  size = $0010, type = ro, file = %O, fill = yes, fillval = $00;
    PRG:    start = $8000,  size = $8000, type = ro, file = %O, fill = yes, fillval = $00;
    CHR:    start = $0000,  size = $4000, type = ro, file = %O, fill = yes, fillval = $00;

    IPSHDR: start = $0000,  size = $0005, type = ro, file = "build/mod.ips";
    SKIP_LEGALHDR:start = $0000,  size = $0005, type = ro, file = "build/mod.ips";
    SKIP_LEGAL:   start = $8236,  size = $8000, type = ro, file = "build/mod.ips";
    STATS_NUMBERHDR:start = $0000,  size = $0005, type = ro, file = "build/mod.ips";
    STATS_NUMBER:   start = $9669,  size = $8000, type = ro, file = "build/mod.ips";
    HUNK1HDR:start = $0000,  size = $0005, type = ro, file = "build/mod.ips";
    HUNK1:   start = $996A,  size = $0003, type = ro, file = "build/mod.ips";
    DEFAULT_HIGH_SCORESHDR:start = $0000,  size = $0005, type = ro, file = "build/mod.ips";
    DEFAULT_HIGH_SCORES:   start = $AD67,  size = $8000, type = ro, file = "build/mod.ips";
    GAME_BGHDR:start = $0000,  size = $0005, type = ro, file = "build/mod.ips";
    GAME_BG:   start = $BF3C,  size = $8000, type = ro, file = "build/mod.ips";
    MAINHDR:start = $0000,  size = $0005, type = ro, file = "build/mod.ips";
    MAIN:   start = $D6C9,  size = $8000, type = ro, file = "build/mod.ips";
    IPSEOF: start = $0000,  size = $0003, type = ro, file = "build/mod.ips";
}

SEGMENTS {
    ZEROPAGE: load = ZP,  type = zp;
    OAM:      load = OAM, type = bss, align = $100;
    BSS:      load = RAM, type = bss;
    HEADER:   load = HDR, type = ro;
    PRG:      load = PRG, type = ro,  start = $8000;
    CODE:     load = PRG, type = ro;
    VECTORS:  load = PRG, type = ro,  start = $FFFA;
    CHR:      load = CHR, type = ro;

    IPSHEADER:load = IPSHDR, type = ro;
    HUNK1HDR: load = HUNK1HDR, type = ro;
    HUNK1:    load = HUNK1, type = ro, define = yes;
    MAINHDR: load = MAINHDR, type = ro;
    MAIN:    load = MAIN, type = ro, define = yes;
    GAME_BGHDR: load = GAME_BGHDR, type = ro;
    GAME_BG:    load = GAME_BG, type = ro, define = yes;
    STATS_NUMBERHDR: load = STATS_NUMBERHDR, type = ro;
    STATS_NUMBER:    load = STATS_NUMBER, type = ro, define = yes;
    SKIP_LEGALHDR: load = SKIP_LEGALHDR, type = ro;
    SKIP_LEGAL:    load = SKIP_LEGAL, type = ro, define = yes;
    DEFAULT_HIGH_SCORESHDR: load = DEFAULT_HIGH_SCORESHDR, type = ro;
    DEFAULT_HIGH_SCORES:    load = DEFAULT_HIGH_SCORES, type = ro, define = yes;
    IPSEOF:   load = IPSEOF, type = ro;
}
