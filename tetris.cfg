MEMORY {
    ZP:     start = $00,    size = $0100, type = rw, file = "";
    OAM:    start = $0200,  size = $0100, type = rw, file = "";
    RAM:    start = $0300,  size = $0500, type = rw, file = "";
    HDR:    start = $0000,  size = $0010, type = ro, file = %O, fill = yes, fillval = $00;
    PRG:    start = $8000,  size = $8000, type = ro, file = %O, fill = yes, fillval = $00;
    CHR:    start = $0000,  size = $4000, type = ro, file = %O, fill = yes, fillval = $00;

    IPSHDR: start = $0000,  size = $0005, type = ro, file = "build/mod.ips";
    HNK1HDR:start = $0000,  size = $0005, type = ro, file = "build/mod.ips";
    HNK1:   start = $996A,  size = $0003, type = ro, file = "build/mod.ips";
    HNK2HDR:start = $0000,  size = $0005, type = ro, file = "build/mod.ips";
    HNK2:   start = $D6C8,  size = $8000, type = ro, file = "build/mod.ips";
    IPSEOF: start = $0000,  size = $0003, type = ro, file = "build/mod.ips";
}

SEGMENTS {
    ZEROPAGE: load = ZP,  type = zp;
    OAM:      load = OAM, type = bss, align = $100;
    BSS:      load = RAM, type = bss;
    HEADER:   load = HDR, type = ro;
    PRG:      load = PRG, type = ro,  start = $8000;
    CODE:     load = PRG, type = ro;
    VECTORS:  load = PRG, type = ro,  start = $FFFA;
    CHR:      load = CHR, type = ro;

    IPSHEADER:load = IPSHDR, type = ro;
    HUNK1HDR: load = HNK1HDR, type = ro;
    HUNK1:    load = HNK1, type = ro, define = yes;
    HUNK2HDR: load = HNK2HDR, type = ro;
    HUNK2:    load = HNK2, type = ro, define = yes;
    IPSEOF:   load = IPSEOF, type = ro;
}
